{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jotap\\\\Desktop\\\\projeto\\\\nlw04\\\\MovWork-FrontEnd\\\\src\\\\contexts\\\\ChallengeContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n\n    if (Notification.permission === 'granted') {\n      new Notification('Novo desafio', {\n        body: \"Valendo \".concat(challenge.amount)\n      });\n    }\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completChallenge() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperience = currentExperience + amount;\n\n    if (finalExperience >= experienceToNextLevel) {\n      finalExperience = finalExperience - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperience);\n    setActiveChallenge(null);\n    setChallengesCompleted(challengesCompleted + 1);\n  }\n\n  function startNewChallenge() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      experienceToNextLevel: experienceToNextLevel,\n      levelUp: levelUp,\n      completChallenge: completChallenge,\n      startNewChallenge: startNewChallenge,\n      resetChallenge: resetChallenge,\n      activeChallenge: activeChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"mXQLPpEuqfijIicM0DJuMSLmJHY=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/jotap/Desktop/projeto/nlw04/MovWork-FrontEnd/src/contexts/ChallengeContext.tsx"],"names":["createContext","useState","useEffect","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","permission","body","challenge","amount","levelUp","resetChallenge","completChallenge","finalExperience","startNewChallenge","randomChallengeIndex","floor","random","length"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAwBA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASK,kBAAT,OAAgE;AAAA;;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;;AAAA,kBACzCL,QAAQ,CAAC,CAAD,CADiC;AAAA,MAC5DM,KAD4D;AAAA,MACrDC,QADqD;;AAAA,mBAEjBP,QAAQ,CAAC,CAAD,CAFS;AAAA,MAE5DQ,iBAF4D;AAAA,MAEzCC,oBAFyC;;AAAA,mBAGbT,QAAQ,CAAC,CAAD,CAHK;AAAA,MAG5DU,mBAH4D;AAAA,MAGvCC,sBAHuC;;AAAA,mBAKrBX,QAAQ,CAAC,IAAD,CALa;AAAA,MAK5DY,eAL4D;AAAA,MAK3CC,kBAL2C;;AAOnE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAL,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,YAAY,CAACC,iBAAb;;AAEA,QAAGD,YAAY,CAACE,UAAb,KAA4B,SAA/B,EAAyC;AACrC,UAAIF,YAAJ,CAAiB,cAAjB,EAAiC;AAC7BG,QAAAA,IAAI,oBAAaC,SAAS,CAACC,MAAvB;AADyB,OAAjC;AAGH;AACJ,GARQ,EAQN,EARM,CAAT;;AAUA,WAASC,OAAT,GAAmB;AACjBhB,IAAAA,QAAQ,CAACD,KAAK,GAAC,CAAP,CAAR;AACD;;AAED,WAASkB,cAAT,GAAyB;AACrBX,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASY,gBAAT,GAA2B;AACvB,QAAG,CAACb,eAAJ,EAAoB;AAChB;AACH;;AAHsB,QAKhBU,MALgB,GAKNV,eALM,CAKhBU,MALgB;AAOvB,QAAII,eAAe,GAAGlB,iBAAiB,GAAGc,MAA1C;;AAEA,QAAGI,eAAe,IAAIZ,qBAAtB,EAA4C;AACxCY,MAAAA,eAAe,GAAGA,eAAe,GAAGZ,qBAApC;AACAS,MAAAA,OAAO;AACV;;AAEDd,IAAAA,oBAAoB,CAACiB,eAAD,CAApB;AACAb,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,sBAAsB,CAACD,mBAAmB,GAAC,CAArB,CAAtB;AACH;;AAED,WAASiB,iBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGb,IAAI,CAACc,KAAL,CAAWd,IAAI,CAACe,MAAL,KAAgB5B,UAAU,CAAC6B,MAAtC,CAA7B;AACA,QAAMV,SAAS,GAAGnB,UAAU,CAAC0B,oBAAD,CAA5B;AAEAf,IAAAA,kBAAkB,CAACQ,SAAD,CAAlB;AACH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAACf,MAAAA,KAAK,EAALA,KAAD;AAAQE,MAAAA,iBAAiB,EAAjBA,iBAAR;AAA2BE,MAAAA,mBAAmB,EAAnBA,mBAA3B;AAAgDI,MAAAA,qBAAqB,EAArBA,qBAAhD;AAAuES,MAAAA,OAAO,EAAPA,OAAvE;AAAgFE,MAAAA,gBAAgB,EAAhBA,gBAAhF;AAAkGE,MAAAA,iBAAiB,EAAjBA,iBAAlG;AAAqHH,MAAAA,cAAc,EAAdA,cAArH;AAAqIZ,MAAAA,eAAe,EAAfA;AAArI,KAAnC;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1DeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, useState, ReactNode, useEffect } from \"react\";\r\nimport challenges from \"../../challenges.json\";\r\n\r\ninterface challenge{\r\n    type: 'body' | 'eye';\r\n    description: string;\r\n    amount: number;\r\n}\r\n\r\ninterface ChallengesContextData{\r\n    level: number;\r\n    currentExperience: number;\r\n    experienceToNextLevel: number;\r\n    challengesCompleted: number;\r\n    activeChallenge: challenge; \r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n    resetChallenge: () => void;\r\n    completChallenge: () => void;\r\n}\r\n\r\ninterface ChallengesProviderProps{\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengesProvider({children}: ChallengesProviderProps){\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n    const [activeChallenge, setActiveChallenge] = useState(null);\r\n\r\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\r\n\r\n    useEffect(() => {\r\n        Notification.requestPermission();\r\n\r\n        if(Notification.permission === 'granted'){\r\n            new Notification('Novo desafio', {\r\n                body: `Valendo ${challenge.amount}`\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    function levelUp() {\r\n      setLevel(level+1);\r\n    }\r\n\r\n    function resetChallenge(){\r\n        setActiveChallenge(null);\r\n    }\r\n\r\n    function completChallenge(){\r\n        if(!activeChallenge){\r\n            return;\r\n        }\r\n\r\n        const {amount} = activeChallenge;\r\n\r\n        let finalExperience = currentExperience + amount;\r\n\r\n        if(finalExperience >= experienceToNextLevel){\r\n            finalExperience = finalExperience - experienceToNextLevel;\r\n            levelUp();\r\n        }\r\n\r\n        setCurrentExperience(finalExperience);\r\n        setActiveChallenge(null);\r\n        setChallengesCompleted(challengesCompleted+1);\r\n    }\r\n\r\n    function startNewChallenge(){\r\n        const randomChallengeIndex = Math.floor(Math.random() * challenges.length);\r\n        const challenge = challenges[randomChallengeIndex];\r\n\r\n        setActiveChallenge(challenge)\r\n    }\r\n  \r\n    return(\r\n        <ChallengesContext.Provider value={{level, currentExperience, challengesCompleted, experienceToNextLevel, levelUp, completChallenge, startNewChallenge, resetChallenge, activeChallenge}}>\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}