{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\jotap\\\\Desktop\\\\projeto\\\\nlw04\\\\MovWork-FrontEnd\\\\src\\\\components\\\\Countdown.tsx\";\nimport styles from \"../styles/components/Countdown.module.css\";\nimport { useContext } from \"react\";\nimport { CountdownContext } from \"../contexts/CountdownContext\";\nexport function Countdown() {\n  const {\n    minutes,\n    seconds,\n    isActive,\n    hasFinished,\n    resetCountdown,\n    startCountdown\n  } = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\n  const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo ecerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: \"Abandonar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/jotap/Desktop/projeto/nlw04/MovWork-FrontEnd/src/components/Countdown.tsx"],"names":["styles","useContext","CountdownContext","Countdown","minutes","seconds","isActive","hasFinished","resetCountdown","startCountdown","minuteLeft","minuteRight","String","padStart","split","secondLeft","secondRight","countdownContainer","countdownButton","countdownButtonActive"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,SAASC,SAAT,GAAqB;AACxB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA,WAA9B;AAA2CC,IAAAA,cAA3C;AAA2DC,IAAAA;AAA3D,MAA8ER,UAAU,CAACC,gBAAD,CAA9F;AAEA,QAAM,CAACQ,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACR,OAAD,CAAN,CAAgBS,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BJ,MAAM,CAACP,OAAD,CAAN,CAAgBQ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACiB,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOI;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKT,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEP,MAAM,CAACkB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKR;AAAA,gBACKZ,QAAQ,gBACL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAG,GAAEN,MAAM,CAACkB,eAAgB,IAAGlB,MAAM,CAACmB,qBAAsB,EAA3F;AAA8F,QAAA,OAAO,EAAEX,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAKL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAER,MAAM,CAACkB,eAAxC;AAAyD,QAAA,OAAO,EAAET,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR,qBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH","sourcesContent":["import styles from \"../styles/components/Countdown.module.css\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { CountdownContext } from \"../contexts/CountdownContext\";\r\n\r\nexport function Countdown() {\r\n    const { minutes, seconds, isActive, hasFinished, resetCountdown, startCountdown } = useContext(CountdownContext)\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button disabled className={styles.countdownButton}>\r\n                    Ciclo ecerrado               \r\n                </button>\r\n            ): (\r\n                <>                    \r\n                    {isActive ? (\r\n                        <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>\r\n                            Abandonar um ciclo               \r\n                        </button>\r\n                    ) : (\r\n                        <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\r\n                            Iniciar ciclo\r\n                        </button>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}