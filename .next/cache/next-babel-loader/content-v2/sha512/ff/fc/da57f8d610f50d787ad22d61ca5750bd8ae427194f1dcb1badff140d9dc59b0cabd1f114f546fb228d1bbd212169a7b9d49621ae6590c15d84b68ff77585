{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/jotap/Desktop/projeto/nlw04/MovWork-FrontEnd/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\jotap\\\\Desktop\\\\projeto\\\\nlw04\\\\MovWork-FrontEnd\\\\src\\\\components\\\\Countdown.tsx\",\n    _s = $RefreshSig$();\n\nimport styles from \"../styles/components/Countdown.module.css\";\nimport { useContext } from \"react\";\nexport function Countdown() {\n  _s();\n\n  var _useContext = useContext(CountdownContext),\n      minute = _useContext.minute;\n\n  var _String$padStart$spli = String(minutes).padStart(2, '0').split(''),\n      _String$padStart$spli2 = _slicedToArray(_String$padStart$spli, 2),\n      minuteLeft = _String$padStart$spli2[0],\n      minuteRight = _String$padStart$spli2[1];\n\n  var _String$padStart$spli3 = String(seconds).padStart(2, '0').split(''),\n      _String$padStart$spli4 = _slicedToArray(_String$padStart$spli3, 2),\n      secondLeft = _String$padStart$spli4[0],\n      secondRight = _String$padStart$spli4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: minuteRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondLeft\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: secondRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: \"Ciclo ecerrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isActive ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"\".concat(styles.countdownButton, \" \").concat(styles.countdownButtonActive),\n        onClick: resetCountdown,\n        children: \"Abandonar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Countdown, \"1mTF7Lx13IxW59vxA04TqE+FfcI=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["C:/Users/jotap/Desktop/projeto/nlw04/MovWork-FrontEnd/src/components/Countdown.tsx"],"names":["styles","useContext","Countdown","CountdownContext","minute","String","minutes","padStart","split","minuteLeft","minuteRight","seconds","secondLeft","secondRight","countdownContainer","hasFinished","countdownButton","isActive","countdownButtonActive","resetCountdown","startCountdown"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,2CAAnB;AACA,SAA8BC,UAA9B,QAAgD,OAAhD;AAGA,OAAO,SAASC,SAAT,GAAqB;AAAA;;AAAA,oBACLD,UAAU,CAACE,gBAAD,CADL;AAAA,MACjBC,MADiB,eACjBA,MADiB;;AAAA,8BAGUC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAHV;AAAA;AAAA,MAGjBC,UAHiB;AAAA,MAGLC,WAHK;;AAAA,+BAIUL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAJV;AAAA;AAAA,MAIjBI,UAJiB;AAAA,MAILC,WAJK;;AAMxB,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,kBAAvB;AAAA,8BACI;AAAA,gCACI;AAAA,oBAAOL;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCACI;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKE,WAAW,gBACR;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEf,MAAM,CAACgB,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,gBAKR;AAAA,gBACKC,QAAQ,gBACL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,YAAKjB,MAAM,CAACgB,eAAZ,cAA+BhB,MAAM,CAACkB,qBAAtC,CAA/B;AAA8F,QAAA,OAAO,EAAEC,cAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAKL;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAEnB,MAAM,CAACgB,eAAxC;AAAyD,QAAA,OAAO,EAAEI,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR,qBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GAxCelB,S;;KAAAA,S","sourcesContent":["import styles from \"../styles/components/Countdown.module.css\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { ChallengesContext } from \"../contexts/CountdownContext\";\r\n\r\nexport function Countdown() {\r\n    const {minute, } = useContext(CountdownContext)\r\n\r\n    const [minuteLeft, minuteRight] = String(minutes).padStart(2, '0').split('');\r\n    const [secondLeft, secondRight] = String(seconds).padStart(2, '0').split('');\r\n\r\n    return(\r\n        <div>\r\n            <div className={styles.countdownContainer}>\r\n                <div>\r\n                    <span>{minuteLeft}</span>\r\n                    <span>{minuteRight}</span>\r\n                </div>\r\n                <span>:</span>\r\n                <div>\r\n                    <span>{secondLeft}</span>\r\n                    <span>{secondRight}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {hasFinished ? (\r\n                <button disabled className={styles.countdownButton}>\r\n                    Ciclo ecerrado               \r\n                </button>\r\n            ): (\r\n                <>                    \r\n                    {isActive ? (\r\n                        <button type=\"button\" className={`${styles.countdownButton} ${styles.countdownButtonActive}`} onClick={resetCountdown}>\r\n                            Abandonar um ciclo               \r\n                        </button>\r\n                    ) : (\r\n                        <button type=\"button\" className={styles.countdownButton} onClick={startCountdown}>\r\n                            Iniciar ciclo\r\n                        </button>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}